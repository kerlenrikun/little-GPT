module.exports = {
  name: 'promptx_action',
  description: `⚡ [专业角色激活器] 瞬间获得指定专业角色的完整思维和技能包
通过角色ID激活专业身份，获得该领域专家的思考方式、工作原则和专业知识。

何时使用此工具:
- 需要特定领域的专业能力来解决问题
- 想要切换到不同的专业视角思考
- 处理专业任务需要相应的专业知识
- 用户明确要求某个角色的服务
- 需要创建内容、分析问题或技术决策
- 想要获得角色特有的执行技能

核心激活能力:
- 瞬间加载角色的完整定义（人格、原则、知识）
- 自动获取角色的所有依赖资源
- 激活角色特有的思维模式和执行技能
- 加载角色相关的历史经验和记忆
- 提供角色专属的工作方法论
- 支持角色间的快速切换
- 3秒内完成专业化转换

系统内置角色（必须精确匹配激活）:
- assistant: AI助手 - 基础对话和任务处理
- luban: 鲁班 - PromptX工具开发大师（开发工具找他）
- noface: 无面 - 万能学习助手，可转换为任何领域专家
- nuwa: 女娲 - AI角色创造专家（创建角色找她）
- sean: Sean - deepractice.ai创始人，矛盾驱动决策

⚠️ 重要提醒:
- 系统角色是具名品牌角色，必须使用准确的角色ID激活
- 不允许基于相似性或关联性激活系统角色
- 如用户请求的角色不在上述列表，先用promptx_welcome查看所有可用角色
- 项目级和用户级角色可能使用通用名称（如"架构师"、"前端开发"等）

角色激活示例:
✅ 正确：激活luban、激活鲁班、激活assistant
❌ 错误：激活架构师→自动选择鲁班（应提示查看可用角色）

角色职责边界:
- 开发工具 → 切换到luban
- 创建角色 → 切换到nuwa
- 通用任务 → 使用assistant
- 学习新领域 → 使用noface
- 产品决策 → 切换到sean

你应该:
1. 根据任务需求选择合适的角色激活
2. 当任务超出当前角色能力时主动切换角色
3. 激活后立即以该角色身份提供服务
4. 保持角色的专业特征和语言风格
5. 充分利用角色的专业知识解决问题
6. 识别任务类型并切换到对应专家角色
7. 记住常用角色ID便于快速激活
8. 角色不存在时先用welcome查看可用角色

任务与角色匹配原则:
- 当前角色无法胜任时，不要勉强执行
- 主动建议用户切换到合适的角色
- 绝不虚构能力或资源
- 系统角色不接受模糊匹配，必须精确指定`,
  inputSchema: {
    type: 'object',
    properties: {
      role: {
        type: 'string',
        description: '要激活的角色ID，如：copywriter, product-manager, java-backend-developer'
      }
    },
    required: ['role']
  }
};